리소스 장벽(Resource Barrier)
리소스 장벽은 D3D12_RESOURCE_BARRIER_DESC 구조체에서 서술
- 리소스에 대한 상태 관리를 위한 객체
- 리소스(메모리)에 대한 여러 접근들을 동기화할 필요가 있음을 드라이버에게 통지
  동기화는 하나의 리소스에 대하여 읽기와 쓰기 접근이 동시에 일어날 때 발생
  예) 텍스처 리소스가 SRV와 RTV로 사용될 때

리소스 상태의 종류
D3D12_RESOURCE_STATE(읽기 전용 또는 읽기/쓰기 상태)
렌더 타겟을 사용하기 위한 상태: D3D12_RESOURCE_STATE_RENDER_TARGET
깊이/스텐실 버퍼 리소스의 초기 상태: D3D12_RESOURCE_STATE_DEPTH_WRITE
후면 버퍼가 프리젠트 될 때 상태: D3D12_RESOURCE_STATE_PRESENT
- 리소스의 초기 상태
  디폴트 힙(Default Heap): COPY_DEST(복사 연산의 목표로 사용)

리소스 장벽의 유형
- 전이 장벽
- 겹침 장벽
- 무순서 접근 뷰 장벽


Graphics Pipeline
- CreateGraphicsPipelineState

입력 조립기 단계(Input Assembler Stage)
메모리에서 정점들과 색인과 같은 기하 자료를 읽어 프리미티브를 조립한다.
색인들은 정점들을 모아 기본 도형을 형성하는 방식을 결정한다
(POINTLIST, LINESTRIP, LINELIST, TRIANGLESTRIP 등 결정)

정점 셰이더 단계(Vertex Shader Stage)
모든 정점의 위치를 모델 좌표계에서 투영 좌표계로 변환하는 작업이다
(모델 좌표계 -> 월드 좌표계 -> 카메라 좌표계 -> 투영 좌표계)

레스터라이저 단계(Rasterizer Stage)
투영된 3차원 삼각형으로부터 픽셀 색상들을 계산하는 단계이다.

픽셀 셰이더 단계(Pixel Shader Stage)
보간된 정점 특성들을 입력받아서 하나의 색상을 출력한다.
픽셀 셰이더의 역할은 고정된 상수 색상을 리턴하는 간단한 것에서부터 픽셀당 조명, 반사, 그림자 효과 등 복잡한 작업을 수행하는 것까지 다양하다.

출력 병합기 단계(Output Merger Stage)
depth/stencil 검사 등을 통해 일부 픽셀들이 기각된다. 기각되지 않은 픽셀 단편들은 후면 버퍼에 기록된다.