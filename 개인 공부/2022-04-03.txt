Direct3D Device
프레임 버퍼의 공유
- 프레임 버퍼의 내용은 화면의 내용과 일치
- 그래픽 어댑터가 하나의 프레임 버퍼를 디스플레이로 출력하고 있는 도중에 응용 프로그램이 출력할 내용을 그 프레임 버퍼에 쓰는 상황이 발생한다면 -> 화면이 깜박이는 현상이 발생한다.

이중 버퍼링(Double Buffering)
- 전면 버퍼(Front Buffer), 후면 버퍼(Back Buffer)
  Direct3D Device 인터페이스는 다음에 출력할 이미지를 후면 버퍼로 보낸다.
- 스왑 체인(Swap Chain)
  순차적으로 연결된 프레임 버퍼들의 집합
- 프레젠테이션

COM 객체(COM Object)
- COM(Component Object Model)
  DLL의 형태로 제공
- 객체의 내부는 노출하지 않고 외부에서 호출할 수 있는 메소드 함수들만을 노출
- 프로그램에서 COM 객체를 사용하는 유일한 방법은 노출된 메소드를 호출하는 것.
  일반적인 C++ 객체를 사용하는 방법과 유사한 방법으로 사용할 수 있음.
  객체의 생성과 소멸 방법이 다름
- 모든 Direct3D 객체는 COM 객체
- 프로그램에서 COM 객체는 인터페이스(Interface)를 통하여 참조.
  실제로는 인터페이스 포인터를 통하여 참조
  인터페이스 포인터는 C++의 포인터처럼 사용.

IUnknown 인터페이스
- 모든 COM 인터페이스는 IUnknown 인터페이스에서 상속(Derived)
- IUnknown::AddRef
  인터페이스의 참조 카운터를 1 증가시킨다
  이것은 이 메소드를 호출하는 객체가 이 객체를 사용하고 있음을 나타낸다.
- IUnknown::Release
  인터페이스의 참조 카운터를 1 감소시킨다
  이것은 이 메소드를 호출하는 객체가 이 객체를 더 이상 사용하지 않음을 나타낸다.
- IUnknown::QueryInterface
  이 객체가 어떤 인터페이스를 제공하는가를 질의한다.

COM 객체의 생성과 소멸
- COM 객체의 생성과 소멸 과정은 일반적으로 객체를 생성시키고 소멸시키는 과정과는 다르다.
- 객체의 참조 카운터가 0이 되면 그 객체는 자동으로 소멸된다.

ID3D12Device* pd3dDevice = NULL;
D3D12CreateDevice(..., &pd3dDevice);
와 같은 방법으로 디바이스를 생성한다면 참조 카운터는 1 증가한다.
ID3D12Device* pd3dDeviceCopied = pd3dDevice;
pd3dDeviceCopied->AddRef();
와 같은 방법으로 디바이스를 하나 더 생성한다면 AddRef를 호출해줘야 한다. 이 경우 참조 카운터는 2가 된다.
pd3dDeviceCopied->Release();
...
pd3dDevice ->Release();
다 쓴 다음에는 다음과 같이 Release를 호출해 주어야 한다.

COM 객체가 아닌 경우
1. 변수 선언 또는 메모리 할당
2. 주소를 넘김



GUID
- GUID(Globally Unique Identifier)
  인터페이스 클래스 식별자(ID)를 나타내는 128-비트 정수 문자열. COM 객체 또는 COM 클래스가 생성될 때 마다 고유의 식별자를 생성한다.
- IID(Interface Identifier)
  인터페이스를 구별하기 위한 GUID
- _uuidof(expression)
  인터페이스 클래스 이름이나 인터페이스 포인터를 넘겨 주면 GUID를 리턴해 준다.

- ComPtr 클래스
  인터페이스 포인터의 소멸자에서 Release()를 호출하는 스마트 포인터를 구현

DXGI(DirectX Graphics Infrastructure)
- DirectX 그래픽 런타임에 독립적인 저수준(low-level)의 작업을 관리
  하드웨어 디바이스의 열거, 모니터의 열거, 프리젠트, 전체 화면 모드로의 전환 등
- DirectX 그래픽을 위한 기본적이고 공통적인 프레임워크를 제공
- 새로운 그래픽 라이브러리(DirectX)가 나오더라도 변하지 않을 수 있도록 독립적으로 구성.