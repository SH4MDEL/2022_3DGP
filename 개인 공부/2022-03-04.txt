3D Graphic Pipeline
변환, 조명

Shader Programming
HLSL
Vertex Shader, Pixel Shader, Geometry Shader


렌더링 엔진
- 게임 엔진의 핵심 모듈
- 렌더러라고 부름
- 가장적인 게임 세계의 3차원 표현을 스크린에 2차원 영상으로 그려내는 역할
- 수학적 3차원 표현과 처리 방법이 필요

객체, 모델, 메쉬
- 동일한 것을 다른 뷰로 표현
- 메쉬(Mesh): 물체의 외관을 표현하기 위한 연결된 다각형(Polygon, 일반적으로 삼각형으로 한정)들의 집합
  다각형: 연결된 선분들의 집합
  선분: 연결된 점들의 집합
- 면(Face): 메쉬의 각 다각형

정면(Front Face), 은면(Hidden Face, Back Face)

좌표계(Coordinate system)
화면(스크린) 좌표계
직교 좌표계

3차원 좌표계
왼손 좌표계: z축이 들어감.(Direct3D에서 사용)
오른손 좌표계: z축이 나옴.

메쉬의 표현
- 메쉬: 다각형들의 집합
- 다각형: 순서화된 3차원 점들의 집합
Vertex: 점(x, y, z)
Polygon: 다각형(nVertex, *pVertex), 삼각형이면 nVertex는 3, 사각형이면 4
Mesh: 다각형들의 집합(nFaces, *pFaces)
이러한 Mesh를 화면에 그림


좌표계: 위치와 방향을 나타내기 위함
- 원점(Origin, 기준점), 축, 축의 방향, 단위

모델 좌표계(Model Space) or 로컬 좌표계
- 모델(메쉬)를 표현하기 위한 좌표계
  모델마다 '자체적인 별도의 좌표계'를 가지고 있다고 가정
- 객체 로컬 공간(Object Local Space)
- 일반적으로 객체(메쉬)의 중심을 원점으로 하는 좌표계
  (좌표계의 원점과 중심이 반드시 일치해야 하는 것은 아님)

월드 좌표계(World Space)
- 게임 세계를 하나의 통일된 좌표계로 표현
- 모든 객체(메쉬)들이 동일한 하나의 좌표계로 표현(배치)

모델 = 메쉬(기하학적 모델)
객체 = 모델의 인스턴스(Instance)
인스턴스: 클래스가 오브젝트로 만들어지면 인스턴스화 되었다.

텍스처 매핑
맵(map): 2D 이미지
매핑(Mapping): 2D 이미지 사용


마을을 배경으로 하는 맵이 있다고 한다.
플레이어가 건물을 뚫고 지나가면 이상하므로 충돌 처리를 해야한다.
그런데 플레이어가 어디 있는지 모른다면 모든 건물에 대하여 충돌 처리를 해야한다.
1억개의 오브젝트를 전부 확인한다고 한다면, 이건 게임이라고 할 수 없다.
보통 1초에 60번 이상, 최소 30번 이상 플레이어와 게임 간의 상호작용이 일어나야 한다. (Frame Rate)

게임 월드 단위
- 개발자는 게임 월드의 크기와 단위를 결정하기 위해 아티스트와 협력해야 한다.
- 메쉬의 크기와 이동 속력을 고려해야 한다.
- 텍스처 매핑을 어떻게 할 것인가도 고려해야 한다.

은면 제거(Back Face Culling)
- 은면 제거는 관찰자(카메라)가 볼 수 없는 면을 그리지 않는 것이다.
  은면이란 다각형의 면이 관찰자를 향하지 않는 면을 의미한다.

와인딩 순서(Winding Order)
- 다각형의 정점들을 나열하는 순서를 와인딩 순서라고 한다.
- 와인딩 순서는 메쉬를 구성하는 선분(Edge)들이 어떻게 연결되는 가를 나타낸다.
- 렌더러는 와인딩 순서를 사용하여 은면 제거를 수행할 수 있다.
- 시계방향(Clockwise) 와인딩 순서는 한 면을 정면에서 바라볼 때 그 면의 모든 정점들이 시계방향으로 나열되는 것을 의미한다.
- DirectX에서 다각형들은 기본적으로 시계방향 와인딩 순서를 갖는 것으로 가정한다. (즉 반시계 방향 다각형은 은면이다)

렌더링
장면(Scene)
- 게임 월드 자체
- 게임 월드에서 현재 화면에 그려져야 하는 부분(카메라에 현재 보이는 객체들)
- 게임 월드 = 객체(메쉬)들 (배경, 이펙트 등도 객체로 취급하자)

렌더링(Rendering) -> T & L (Transformation & Lighting)
- 장면을 렌더링하는 것은 게임 월드의 모든 객체를 그리는 것
-> 결과적으로 모든 다각형들을 그리는 것
-> 결과적으로 모든 픽셀들을 그리는 것(색칠하는 것)
    다각형의 3D 모델 좌표를 2D 화면 좌표(픽셀)로 변환하는 과정
-> 변환(Transformation): 모양, 크기, 방향
픽셀의 색상을 결정하는 과정(Lighting, Texture Mapping, ...)