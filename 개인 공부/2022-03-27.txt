레스터라이저 단계에서 픽셀의 속성 계산
- 보간: 선형 보간(직선의 방정식 활용)
- 프래그먼트(픽셀)의 색상 보간
- 다른 데이터(법선 벡터, 텍스처 좌표 등)도 보간

Direct3D 셰이더 단계(Shader Stage)

모든 셰이더 단계들은 공통-셰이더 코어(Common-Shader Core)라고 하는 공통된 형태를 띄고 있다.
메모리 리소스로부터 상수 버퍼, 텍스처, 버퍼를 읽어 일종의 함수인 셰이더 코드에 매개변수로 넘긴다.

정점 셰이더 단계(Vertex-Shader Stage)
- 입력 조립 단계에서 출력되는 프리미티브의 각 정점에 대한 연산을 수행
  변환(Transformation), 스키닝(Skinning), Morphing, 조명(Vertex Lighting)
- 정점 셰이더(VS)는 하나의 정점에 대하여 한 번 호출되며 그 결과로 하나의 출력 정점을 생성
- 정점 셰이더 단계는 파이프라인 단계에서 항상 수행되어야 함. 정점에 대한 변환이 필요하지 않더라도 정점 셰이더를 생성하여 연결해야 함
- 정점 셰이더는 최소 하나의 입력과 하나의 출력을 가져야 함
- 정점 셰이더의 입, 출력 정점은 16개의 32-비트 벡터(4-요소 벡터)까지 구성 가능
- 입력 조립 단계에서 생성한 두 개의 시스템 생성 시멘틱을 사용할 수 있음 - SV_VertexID, SV_InstanceID
- 정점 셰이더는 항상 모든 정점들에 대하여 한 번씩 실행된다. 
  정점 버퍼, 상수 변수, 버퍼, 텍스처 등의 데이터를 사용하여 정점에 대한 연산을 구행한다. 
  인접 정점을 가진 입력 프리미티브의 경우 인접한 정점을 포함하여 실행됨.
- 정점 셰이더는 텍스처 로드와 샘플링 연산을 수행할 수 있음.

픽셀 셰이더 단계(Pixel-Shader Stage)
- 각 픽셀의 데이터(기본적으로 색상)을 생성
  상수 변수, 텍스처 데이터, 또는 픽셀 출력 데이터 등을 결합하여 출력 색상을 결정
  픽셀 셰이더 단계에서 픽셀 조명 계산 또는 픽셀에 대한 후처리를 할 수 있음
- 하나의 프리미티브를 구성하는 각 픽셀에 대하여 픽셀-셰이더를 한번씩 호출함
  다중 샘플링을 사용하면 깊이/스텐실 검사는 각 서브픽셀에 대하여 한번씩 수행
  다중 샘플링을 사용해도 픽셀 셰이더는 하나의 픽셀에 대하여 한번만 호출됨
- 기하 셰이더 단계가 없으면 픽셀 셰이더의 입력은 16개의 32-비트 벡터로 제한됨
  기하 셰이더를 사용하면 32개의 32-비트 벡터를 입력으로 사용할 수 있음.
  픽셀 셰이더 입력 데이터는 정점 속성을 포함하거나 프리미티브 상수가 될 수 있음.
  픽셀의 정점 속성은 프리미티브의 정점 속성으로부터 보간됨(레스터라이저 단계)
- 픽셀 셰이더 입력은 시스템-값 시맨틱으로 선언(예: 픽셀 위치는 SV_Position)
  입력-조립 단계는 픽셀 셰이더를 위해 SV_PrimitiveID 시맨틱을 생성
  래스터라이저 단계는 SV_IsFrontFace 시맨틱을 생성
- 픽셀 셰이더는 8개의 32-비트 4-요소 색상을 출력할 수 있음
  픽셀을 버리면(discard) 색상과 깊이값이 출력되지 않음.
  출력-병합 단계에서 깊이 버퍼에 깊이 데이터가 쓰여지는 것을 제어할 수 있음
  픽셀-셰이더는 깊이 값 검사를 위하여 깊이값(SV_Depth 시맨틱)을 출력할 수 있음
  픽셀-셰이더는 스텐실 값을 출력할 수 있음.



Direct3D Graphics Device
그래픽 카드를 소프트웨어적으로 관리할 수 있게 함.

프래임 버퍼(Frame Buffer)
- 모니터로 출력되어야 하는 비디오 메모리의 영역
- 프레임 버퍼의 내용은 자동적으로(하드웨어적으로) 모니터로 출력
수평 스캔 범위: 한 줄을 출력하는데 걸리는 시간
수직 스캔 범위: 화면을 다 그리는데 걸리는 시간


색상 표현
- R, G, B, A(Alpha, 투명도)
- 32-비트: XMCOLOR
- 128-비트: XMVECTOR