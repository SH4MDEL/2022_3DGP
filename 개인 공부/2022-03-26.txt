Direct3D Graphics Pipeline

Direct3D 12 렌더링 파이프라인
- GPU를 사용하여 리소스(정점/인덱스, 텍스처)를 2D 이미지로 렌더링하는 과정.
- 파이프라인은 여러 개의 파이프라인 단계(Pipeline Stage)로 구성. 프로그램 가능 단계와 고정 프로그램 단계로 구분

- 고정 프로그램 단계
  Direct3D에서 모든 처리가 진행되며 응용 프로그램에서 변경할 수 없는 단계(CPU에서 실행된다.)
  입력 조립 단계(IA: Input Assembler Stage)
  테셀레이터 단계(TS: Tessellator Stage)
  스트림 출력 단계(SO: Stream Output Stage)
  레스터라이저 단계(RS: Rasterizer Stage)
  출력 병합 단계(OM: Output Merger Stage)

- 프로그램 가능 단계
  응용 프로그램에서 셰이더 프로그램을 통하여 제공해야 하는 단계(마치 함수와 같다. GPU에서 실행되는 함수)
  정점 셰이더 단계(VS: Vertex Shader Stage)
  헐 셰이더 단계(HS: Hull Shader Stage)
  도메인 셰이더 단계(DS: Domain Shader Stage)
  * 헐 셰이더와 도메인 셰이더는 테셀레이터가 활성화 되어야만 실행 가능 
  기하 셰이더 단계(GS: Geometry Shader Stage)
  픽셀 셰이더 단계(PS: Pixel Shader Stage)


Direct3D 12 파이프라인(일종의 함수, Draw Primitive)

입력 조립기(IA)	<- 정점/인덱스 버퍼
정점 셰이더(VS)	<- 텍스처
헐 셰이더(HS)	<- 텍스처
테셀레이터	<- 정점/인덱스 버퍼
도메인 셰이더(DS)	<- 텍스처
기하 셰이더(GS)	<- 텍스처
	-> 스트림 출력 -> 스트림
레스터라이저
픽셀 셰이더(PS)	<- 텍스처
출력 병합기(OM)	-> 깊이/스텐실 버퍼
		-> 렌더 타겟(화면)

이 단계들은 연결되어 연동되도록 구성
일반적으로 각 단계의 출력 데이터가 바로 다음 단계의 입력 데이터가 되도록 구성.


Direct3D 디바이스(GPU 자체를 의미)
- 하드웨어적인 GPU를 우리가 이용할 수 있도록 소프트웨어 화 해둔 것.
- Direct3D 디바이스는 상태 기계(Stage Machine)이다. 관리하는 상태를 유지한다.
- 선술한 그래픽스 파이프라인 외에 컴퓨트 파이프라인(COMPUTE PIPELINE)을 유지한다.
- 이러한 상태를 명시적으로 바꿔주지 않으면 Direct3D 디바이스는 이를 계속해서 유지한다.
- Direct3D Device는 최종적인 출력 데이터를 렌더 타겟과 깊이/스텐실 버퍼에 출력한다.



1. 입력 조립 단계(Input-Assembler Stage)
- Direct3D 그래픽 파이프라인의 첫 번째 단계이며 고정 함수 단계
- 응용 프로그램에서 제공한 정점 버퍼의 정점 데이터(프리미티브 데이터: 점, 선, 삼각형)를 다른 파이프라인 단계에서 사용할 프리미티브(선 리스트, 삼각형 리스트, 삼각형 스트립, 인접성을 가지는 프리미티브 등(로 조립
- 시스템 생성 값(System-Generated Values)을 추가
  시스템 생성 값은 시맨틱(Semantic)이라고 하는 문자열의 값
  SV_PrimitiveID, SV_InstanceID, SB_VertexID
  다음 단계의 셰이더에서 사용할 수 있음.

2. 래스터라이저 단계(Rasterizer Stage)
- 래스터라이저 단계는 벡터 정보(프리미티브)를 래스터 이미지(픽셀)로 변환(래스터라이제이션, Rasterization)
- 래스터라이제이션을 하는 동안 각 프리미티브를 구성하는 정점은 픽셀로 변환, 프리미티브의 내부에 해당하는 점들은 보간(Interpolation)을 통하여 픽셀로 변환
- 래스터라이저 단계
  원근 투영 나누기(z 나누기)
  카메라 절두체를 벗어나는 점(픽셀)들을 클리핑(clipping, 그리지 않는 것)
  프리미티브를 2차원 뷰포트로 매핑
  프리미티브의 모든 픽셀들에 대하여 픽셀 셰이더(PS)를 호출하여 색 결정.

3. 출력 병합 단계(Output-Merger Stage)
- 최종적으로 픽셀의 색상을 생성하여 렌더 타겟(메모리)으로 출력하는 단계. 파이프라인 상태(State) 정보, 픽셀 셰이더가 생성한 픽셀 색상, 렌더 타겟의 내용, 그리고 깊이/스텐실 버퍼의 내용들을 조합하여 출력할 색상을 결정함.

- 깊이-스탠실 검사(Depth-Stencil Testing)
  픽셀이 그려져야 하는지를 결정하기 위하여 깊이 값과 스텐실 값 데이터를 사용
  깊이 검사(Depth-test)
  z = min(Viewport.MaxDepth, max(Viewport.MinDepth, z))
  출력 픽셀의 깊이 값을 깊이 버퍼의 같은 위치의 깊이 값과 비교
  비교의 결과에 따라 출력 픽셀을 렌더 타겟에 출력하거나 출력하지 않음.
  - 하나의 깊이/스텐실 버퍼만 활성화됨
  - 깊이-스텐실 버퍼에 스텐실 요소가 없으면 스텐실 검사는 항상 성공함.
  - 깊이-스텐실 버퍼가 파이프라인에 연결되지 않으면 스텐실 검사는 항상 성공함.

- 블렌딩(Blending)
  픽셀 값(색상)들을 결합(블렌딩)하여 하나의 최종 픽셀 색상을 생성하는 과정임
  렌더 타겟의 픽셀 색상과 출력(픽셀 셰이더) 색상을 결합.