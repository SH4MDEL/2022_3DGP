DirectXMath 수학 라이브러리 PPT 참고

- 행렬은 기본적으로 행우선 행렬
- Denormals 처리 : 0에 가까운 실수를 표현할 수 없으나 계산상 속도 향상
- XMVertor3AngleBetweenNormalsEst와 같이 끝에 Est가 붙은 함수는 정확성 대신 성능을 위한 근사 함수 버전임. 
- Accessor의 사용 자제 : XMVECTOR/XMMATRIX 하나으이 멤버에 접근하는 것은 느림 (SIMD 레지스터 특성)
- 정렬된(Aligned) 데이터 형식과 연산을 사용: XMFLOAT4X4A 등.
- 성능을 위해 오버로드된 연산자의 사용 자제
- 템플릿 형식의 함수 사용을 선호할 것
- STL 사용 시 16-바이트 정렬을 보장할 것


정점의 법선 벡터 변환하기
- 정점이 변환되면 법선 벡터도 변환된다.
- x-축, y-축, z-축의 크기 변환이 다르면 모델 정점의 법선 벡터는 더 이상 법선 벡터가 되지 않는다.
- x-축, y-축, z-축의 크기 변환이 같으면 법선 벡터의 방향은 바뀌지 않지만 더 이상 단위벡터가 되지 않는다(단위벡터로 만들어야 함).
- 접선 벡터 u가 행렬 A로 변환되면 변환된 접선 벡터는 uA가 된다. 접선 벡터에 수직인 법선 벡터 n은 n((A^-1)^T) (역행렬의 전치행렬)로 변환되어야 한다. 역행렬을 구하는 것은 많은 연산을 필요로 한다.

일반적으로 모델의 변환 정보를 나타낸 4X4행렬에서 Scale 정보를 나타내는 부분 (_11, _22, _33)의 초기값은 1일 것이다. 이를 가급적 건드리지 않는다(Scale하지 않는다).

Unity를 예로 들어도, 프로그램 내부에서 Scale 연산을 하는 것을 위와 같은 이유로 권장하지 않는다. 다만 모델을 Import 할 때 Scale을 지원한다.